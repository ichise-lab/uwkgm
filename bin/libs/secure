#!/bin/bash

secure.password.new() {
    PASSWORD_A=
    PASSWORD_B=

    while [[ $PASSWORD_A == "" || $PASSWORD_A != "$PASSWORD_B" ]];
    do
        read -r -s -p "[UWKGM: INPUT] Enter a new master password: " PASSWORD_A
        echo "********"

        if [[ $PASSWORD_A == "" ]]; then
            echo "[UWKGM: ERROR]: Master password cannot be empty."
            echo ""
        else
            read -r -s -p "[UWKGM: INPUT] Confirm master password: " PASSWORD_B
            echo "********"

            if [[ $PASSWORD_A != "$PASSWORD_B" ]]; then
                echo "[UWKGM: ERROR] Passwords mismatch."
                echo ""
            fi
        fi
    done

    password=$PASSWORD_A
}

secure.password.master() {
    if [[ $UWKGM_OS_BASE == "darwin" ]]; then
        if [[ "$(openssl version)" =~ "LibreSSL" ]]; then
            export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
        fi
    fi

    if [[ $UWKGM_MASTER_PASSWORD == "" ]]; then
        if [[ -f "private/auth.enc" ]]; then
            while [[ $UWKGM_MASTER_PASSWORD == "" ]];
            do
                read -r -s -p "[UWKGM: INPUT] Enter the UWKGM platform's master password: " PASSWORD
                echo "********"

                DECRYPT_RESULT="$(openssl enc -d -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -k "$PASSWORD" -in private/auth.enc &> /dev/null)" || DECRYPT_RESULT="ERROR"

                if [[ $DECRYPT_RESULT == "ERROR" ]]; then
                    echo "[UWKGM: ERROR] Invalid password."
                    echo ""
                else
                    UWKGM_MASTER_PASSWORD="$PASSWORD"
                fi
            done

        else
            echo "[UWKGM: INFO] The UWKGM platform requires that you set a master password to encrypt credentials and secrets."
            secure.password.new
            UWKGM_MASTER_PASSWORD="$PASSWORD"

            echo "VALID" > private/auth.tmp
            openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -k "$UWKGM_MASTER_PASSWORD" -in private/auth.tmp -out private/auth.enc
            rm private/auth.tmp
        fi
    fi

    if [[ -f "private/auth.enc" ]]; then
        echo "[UWKGM: INFO] Password verified."
        echo ""
    else
        echo "[UWKGM: ERROR] Cannot set the master password. This error may be caused by incompatible OpenSSL version."
        echo "If you are using LibreSSL, we recommend that you change it to OpenSSL instead."
        echo ""
        exit 1
    fi
}

secure.file.encryt() {
    openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -k "$UWKGM_MASTER_PASSWORD" -in "$1" -out "$2"
}

secure.file.decrypt() {
    openssl enc -d -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -k "$UWKGM_MASTER_PASSWORD" -in "$1" -out "$2"
}